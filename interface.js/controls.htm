<html>
<head>
  <script src='interface.js'></script>
</head>
<body>
  <div id='patchbayPanel' class='interfacePanel' height="150">
  </div>

  <script>
    // The Interface.js simple server outputs all OSC messages to port 8082. See the README for more information.
    
    // You can manually send OSC messages with the following syntax:
    // Interface.OSC.send('/test', 'fs', [5.7, 'testing']);
    
    panel = new Interface.Panel({ useRelativeSizesAndPositions: true });
/* 
var e = new Interface.Patchbay({ 
  bounds:[0,0,.25,1],
  points:[ 
    {name:0, name2:'matt'},{name:1, name2:'hafiz'},{name:2, name2:'tim'},{name:3, name2:'anis'}, 
    {name:4, name2:'fernando'},{ name:5,name2:'hannah'},{name:6, name2:'karl'}
  ],
  onconnection: function( start, end ) {
  },
  ondisconnection: function( start, end ) {
  },
});


panel.add(e);
*/
   
    // send a message to the address '/button'
    a1 = new Interface.Button({ bounds:[0,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a2 = new Interface.Button({ bounds:[.12,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a3 = new Interface.Button({ bounds:[.25,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a4 = new Interface.Button({ bounds:[.37,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a5 = new Interface.Button({ bounds:[.5,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a6 = new Interface.Button({ bounds:[.62,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a7 = new Interface.Button({ bounds:[.75,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    a8 = new Interface.Button({ bounds:[.87,.25,.12,.25], mode:'toggle', target:"OSC", key:'/button', })
    
    
panel.add(a1,a2,a3,a4,a5,a6,a7,a8);

var multiSlider = new Interface.MultiSlider({ 
  count:20,
  bounds:[.0,.5,1,.5],
  onvaluechange : function(number, value) {
  }
});

panel.background = 'black';
panel.add(multiSlider);



    // override to process OSC messages. By default, if a message is received with the
    // same address as the key of one of the widgets (here /button and /slider) the value
    // of that widget will be set using the parameters of the received OSC message.
    
    Interface.OSC.receive = function( address, typetags, parameters ) {
      var name = address.split("/");
      for( var j = 0; j < Interface.panels[i].children.length; j++) {
        var child = Interface.panels[i].children[j];
        if( child.name === "multislider" ) {
          if (name =="say_levels") {
            var temp=0;
            for (i in parameters){
              multiSlider.children[temp*3].setValue(i);
              temp++;
            }
          }
          if (name =="hear_levels") {
            var temp=0;
            for (i in parameters){
              multiSlider.children[temp*3+1].setValue(i);
              temp++;
            }
          }
        }
      }
      console.log( address, typetags, parameters )
    }
  </script>
</body>
</html>
