#!/usr/bin/perl
#
# use this with the configuration file like this:
#
#   ./make_jacktrip_commands star.conf
#
#
#
use strict;
use warnings;
my @line = <>;
my $firstLine = shift @line;
my ($serverIp, $sampleRate, $blockSize) = split(',', $firstLine);
my @clientName = ();
my %portOffset = ();
my %clientNumber = ();
my $n = 1;
for (@line) {
  chomp;
  my ($clientName, $portOffset) = split(',');
  push @clientName, $clientName;
  $portOffset{$clientName} = $portOffset;
  $clientNumber{$clientName} = $n;
  $n++;
}

print "\n";
print "# on the client side...\n";
for my $clientName (@clientName) {
  print<<EOF;
jacktrip --client $serverIp --portoffset $portOffset{$clientName} --numchannels 2 --nojackportsconnect --clientname $clientName
EOF
}

print "\n";
print "# on the server side...\n";
for my $clientName (@clientName) {
  print<<EOF;
jacktrip --server --portoffset $portOffset{$clientName} --numchannels 2 --nojackportsconnect --clientname $clientName
EOF
}

print "\n";
print "# hook up client says to the system outputs...\n";
for my $clientName (@clientName) {
  print<<EOF;
jack_connect $clientName:receive_1 system:playback_$clientNumber{$clientName}
EOF
}

print "\n";
print "# hook up client says to the matrix...\n";
for my $clientName (@clientName) {
  print<<EOF;
jack_connect $clientName:receive_1 Max:in$clientNumber{$clientName}
EOF
}

print "\n";
print "# hook up matrix to client hears...\n";
for my $clientName (@clientName) {
  print<<EOF;
jack_connect Max:out$clientNumber{$clientName} $clientName:send_1
EOF
}

print "\n";
print "# send mono mix to each client...\n";
for my $from (@clientName) {
  for my $to (@clientName) {
    print<<EOF;
jack_connect $from:receive_1 $to:send_2
EOF
  }
}
